import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Checkbox } from "@/components/ui/checkbox";
import { X, Edit, Calendar, DollarSign } from "lucide-react";
import { format } from "date-fns";

const statusColors = {
  planning: "bg-yellow-100 text-yellow-800 border-yellow-200",
  active: "bg-green-100 text-green-800 border-green-200",
  completed: "bg-blue-100 text-blue-800 border-blue-200",
  cancelled: "bg-gray-100 text-gray-800 border-gray-200"
};

export default function CampaignDetails({ campaign, onClose, onEdit }) {
  return (
    <Card className="mb-8 bg-white/90 backdrop-blur-sm border-gray-200/60">
      <CardHeader className="border-b border-gray-100">
        <div className="flex items-start justify-between">
          <div>
            <CardTitle className="text-2xl mb-2">{campaign.title}</CardTitle>
            <p className="text-gray-500">{campaign.brand_name}</p>
          </div>
          <div className="flex gap-2">
            <Button variant="outline" size="icon" onClick={() => onEdit(campaign)}>
              <Edit className="w-4 h-4" />
            </Button>
            <Button variant="ghost" size="icon" onClick={onClose}>
              <X className="w-4 h-4" />
            </Button>
          </div>
        </div>
      </CardHeader>
      <CardContent className="pt-6 space-y-6">
        <div className="flex flex-wrap gap-4">
          <Badge className={`${statusColors[campaign.status]} border px-4 py-2`}>
            {campaign.status}
          </Badge>
          {campaign.payment_status && (
            <Badge variant="outline" className="px-4 py-2">
              Payment: {campaign.payment_status}
            </Badge>
          )}
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          {campaign.start_date && (
            <div className="flex items-center gap-3 p-4 bg-gray-50 rounded-lg">
              <Calendar className="w-5 h-5 text-indigo-600" />
              <div>
                <p className="text-xs text-gray-500">Start Date</p>
                <p className="font-medium">{format(new Date(campaign.start_date), "MMMM d, yyyy")}</p>
              </div>
            </div>
          )}
          
          {campaign.end_date && (
            <div className="flex items-center gap-3 p-4 bg-gray-50 rounded-lg">
              <Calendar className="w-5 h-5 text-indigo-600" />
              <div>
                <p className="text-xs text-gray-500">End Date</p>
                <p className="font-medium">{format(new Date(campaign.end_date), "MMMM d, yyyy")}</p>
              </div>
            </div>
          )}

          {campaign.payment_amount && (
            <div className="flex items-center gap-3 p-4 bg-amber-50 rounded-lg md:col-span-2">
              <DollarSign className="w-5 h-5 text-amber-600" />
              <div>
                <p className="text-xs text-gray-500">Payment Amount</p>
                <p className="font-bold text-amber-600 text-xl">
                  ${campaign.payment_amount.toLocaleString()}
                </p>
              </div>
            </div>
          )}
        </div>

        {campaign.deliverables && campaign.deliverables.length > 0 && (
          <div className="space-y-3">
            <h3 className="font-semibold text-lg">Deliverables</h3>
            {campaign.deliverables.map((deliverable, index) => (
              <div key={index} className="flex items-center gap-3 p-4 border rounded-lg">
                <Checkbox checked={deliverable.completed} />
                <div className="flex-1">
                  <p className="font-medium">{deliverable.description}</p>
                  <p className="text-sm text-gray-500">{deliverable.platform}</p>
                </div>
              </div>
            ))}
          </div>
        )}

        {campaign.notes && (
          <div className="space-y-2">
            <h3 className="font-semibold">Notes</h3>
            <p className="text-gray-600 whitespace-pre-wrap p-4 bg-gray-50 rounded-lg">
              {campaign.notes}
            </p>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
