import React, { useState } from "react";
import { base44 } from "@/api/base44Client";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Plus, Calendar as CalendarIcon } from "lucide-react";
import { format, startOfMonth, endOfMonth, eachDayOfInterval, isSameDay, isToday } from "date-fns";
import ContentForm from "../components/content/ContentForm";

const platformColors = {
  instagram: "bg-pink-100 text-pink-800 border-pink-200",
  tiktok: "bg-gray-800 text-white border-gray-900",
  youtube: "bg-red-100 text-red-800 border-red-200",
  twitter: "bg-blue-100 text-blue-800 border-blue-200",
  linkedin: "bg-blue-700 text-white border-blue-800",
  facebook: "bg-blue-600 text-white border-blue-700"
};

const statusColors = {
  draft: "bg-gray-100 text-gray-800",
  scheduled: "bg-green-100 text-green-800",
  published: "bg-blue-100 text-blue-800",
  cancelled: "bg-red-100 text-red-800"
};

export default function ContentCalendar() {
  const [showForm, setShowForm] = useState(false);
  const [selectedDate, setSelectedDate] = useState(new Date());
  const [currentMonth, setCurrentMonth] = useState(new Date());
  const queryClient = useQueryClient();

  const { data: content = [] } = useQuery({
    queryKey: ['content'],
    queryFn: () => base44.entities.Content.list('scheduled_date'),
  });

  const createMutation = useMutation({
    mutationFn: (data) => base44.entities.Content.create(data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['content'] });
      setShowForm(false);
    },
  });

  const days = eachDayOfInterval({
    start: startOfMonth(currentMonth),
    end: endOfMonth(currentMonth)
  });

  const getContentForDay = (day) => {
    return content.filter(c => 
      c.scheduled_date && isSameDay(new Date(c.scheduled_date), day)
    );
  };

  return (
    <div className="p-6 md:p-8">
      <div className="max-w-7xl mx-auto">
        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">Content Calendar</h1>
            <p className="text-gray-500">Plan and schedule your content across platforms</p>
          </div>
          <Button
            onClick={() => setShowForm(true)}
            className="bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 shadow-lg shadow-indigo-500/30"
          >
            <Plus className="w-4 h-4 mr-2" />
            Schedule Content
          </Button>
        </div>

        {showForm && (
          <ContentForm
            onSubmit={(data) => createMutation.mutate(data)}
            onCancel={() => setShowForm(false)}
            defaultDate={selectedDate}
          />
        )}

        <Card className="bg-white/80 backdrop-blur-sm border-gray-200/60 p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold">{format(currentMonth, "MMMM yyyy")}</h2>
            <div className="flex gap-2">
              <Button
                variant="outline"
                onClick={() => setCurrentMonth(new Date(currentMonth.setMonth(currentMonth.getMonth() - 1)))}
              >
                Previous
              </Button>
              <Button
                variant="outline"
                onClick={() => setCurrentMonth(new Date())}
              >
                Today
              </Button>
              <Button
                variant="outline"
                onClick={() => setCurrentMonth(new Date(currentMonth.setMonth(currentMonth.getMonth() + 1)))}
              >
                Next
              </Button>
            </div>
          </div>

          <div className="grid grid-cols-7 gap-2">
            {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (
              <div key={day} className="text-center font-semibold text-gray-600 text-sm p-2">
                {day}
              </div>
            ))}
            
            {days.map(day => {
              const dayContent = getContentForDay(day);
              const isCurrentDay = isToday(day);
              
              return (
                <div
                  key={day.toString()}
                  className={`min-h-32 p-2 border rounded-lg transition-all cursor-pointer hover:shadow-md ${
                    isCurrentDay ? 'border-indigo-500 bg-indigo-50' : 'border-gray-200'
                  }`}
                  onClick={() => {
                    setSelectedDate(day);
                    setShowForm(true);
                  }}
                >
                  <div className={`text-sm font-semibold mb-2 ${
                    isCurrentDay ? 'text-indigo-600' : 'text-gray-700'
                  }`}>
                    {format(day, 'd')}
                  </div>
                  <div className="space-y-1">
                    {dayContent.map(item => (
                      <div
                        key={item.id}
                        className={`text-xs p-1.5 rounded ${platformColors[item.platform]} truncate`}
                      >
                        {item.title}
                      </div>
                    ))}
                  </div>
                </div>
              );
            })}
          </div>
        </Card>

        <div className="mt-6 flex flex-wrap gap-3">
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 rounded bg-pink-100 border border-pink-200" />
            <span className="text-sm">Instagram</span>
          </div>
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 rounded bg-gray-800 border border-gray-900" />
            <span className="text-sm">TikTok</span>
          </div>
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 rounded bg-red-100 border border-red-200" />
            <span className="text-sm">YouTube</span>
          </div>
          <div className="flex items-center gap-2">
            <div className="w-4 h-4 rounded bg-blue-100 border border-blue-200" />
            <span className="text-sm">Twitter</span>
          </div>
        </div>
      </div>
    </div>
  );
}
