import React, { useState } from "react";
import { base44 } from "@/api/base44Client";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Plus, Building2, Mail, User } from "lucide-react";
import BrandForm from "../components/partnerships/BrandForm";

const statusColors = {
  active: "bg-green-100 text-green-800 border-green-200",
  potential: "bg-yellow-100 text-yellow-800 border-yellow-200",
  past: "bg-gray-100 text-gray-800 border-gray-200"
};

export default function Partnerships() {
  const [showForm, setShowForm] = useState(false);
  const [editingBrand, setEditingBrand] = useState(null);
  const queryClient = useQueryClient();

  const { data: brands = [] } = useQuery({
    queryKey: ['brands'],
    queryFn: () => base44.entities.Brand.list('-created_date'),
  });

  const createMutation = useMutation({
    mutationFn: (data) => base44.entities.Brand.create(data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['brands'] });
      setShowForm(false);
    },
  });

  const updateMutation = useMutation({
    mutationFn: ({ id, data }) => base44.entities.Brand.update(id, data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['brands'] });
      setShowForm(false);
      setEditingBrand(null);
    },
  });

  return (
    <div className="p-6 md:p-8">
      <div className="max-w-7xl mx-auto">
        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">Brand Partnerships</h1>
            <p className="text-gray-500">Manage your brand relationships and contacts</p>
          </div>
          <Button
            onClick={() => {
              setShowForm(true);
              setEditingBrand(null);
            }}
            className="bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 shadow-lg shadow-indigo-500/30"
          >
            <Plus className="w-4 h-4 mr-2" />
            Add Brand
          </Button>
        </div>

        {showForm && (
          <BrandForm
            brand={editingBrand}
            onSubmit={(data) => {
              if (editingBrand) {
                updateMutation.mutate({ id: editingBrand.id, data });
              } else {
                createMutation.mutate(data);
              }
            }}
            onCancel={() => {
              setShowForm(false);
              setEditingBrand(null);
            }}
          />
        )}

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {brands.map((brand) => (
            <Card
              key={brand.id}
              className="bg-white/80 backdrop-blur-sm border-gray-200/60 hover:shadow-xl transition-all duration-300 cursor-pointer"
              onClick={() => {
                setEditingBrand(brand);
                setShowForm(true);
              }}
            >
              <CardContent className="p-6">
                <div className="flex items-start justify-between mb-4">
                  {brand.logo_url ? (
                    <img src={brand.logo_url} alt={brand.name} className="w-12 h-12 rounded-lg object-cover" />
                  ) : (
                    <div className="w-12 h-12 bg-gradient-to-br from-indigo-400 to-purple-500 rounded-lg flex items-center justify-center">
                      <Building2 className="w-6 h-6 text-white" />
                    </div>
                  )}
                  <Badge className={`${statusColors[brand.partnership_status]} border`}>
                    {brand.partnership_status}
                  </Badge>
                </div>

                <h3 className="text-xl font-bold text-gray-900 mb-2">{brand.name}</h3>
                {brand.industry && (
                  <p className="text-sm text-gray-500 mb-4 capitalize">
                    {brand.industry.replace(/_/g, ' ')}
                  </p>
                )}

                {brand.contact_name && (
                  <div className="flex items-center gap-2 text-sm text-gray-600 mb-2">
                    <User className="w-4 h-4" />
                    {brand.contact_name}
                  </div>
                )}

                {brand.contact_email && (
                  <div className="flex items-center gap-2 text-sm text-gray-600">
                    <Mail className="w-4 h-4" />
                    {brand.contact_email}
                  </div>
                )}

                {brand.notes && (
                  <p className="text-sm text-gray-500 mt-4 pt-4 border-t border-gray-100 line-clamp-2">
                    {brand.notes}
                  </p>
                )}
              </CardContent>
            </Card>
          ))}

          {brands.length === 0 && (
            <Card className="md:col-span-2 lg:col-span-3 p-12 text-center border-dashed">
              <Building2 className="w-16 h-16 text-gray-300 mx-auto mb-4" />
              <h3 className="text-lg font-semibold text-gray-900 mb-2">No brands yet</h3>
              <p className="text-gray-500 mb-4">Start building your partnership network</p>
              <Button onClick={() => setShowForm(true)}>
                <Plus className="w-4 h-4 mr-2" />
                Add Brand
              </Button>
            </Card>
          )}
        </div>
      </div>
    </div>
  );
}
